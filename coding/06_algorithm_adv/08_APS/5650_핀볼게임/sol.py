import sys
sys.stdin = open('input.txt')

def f(x, y, k):
    '''4. 조사 방식 점검
        계속 한 방향으로 나갈거니까, 깊이 우선 탐색?
        그래서 계속 쭉 조사해 나간다?
        그럼 stack 필요한가?
        stack은 왜쓰지? 다음 후보군을 모아두는걸 stack으로 처리하는데...
            지금은 후보군이 공 하나 아닌가?
        필요없다. 재귀면 되나?
            재귀 스택 100*100 overflow 되겠는데? 제한 걸리겠는데?
        종료조건 만족 못하면 그냥 계속 while 돌려볼까?
            아까 대충 계산했을때 시간 그리 오래 안걸리던데
        아, 그럼 재귀로 돌리거 아니니까, 함수 호출된 시점의 x,y 가 시작 지점이겠다.
    '''
    시작 지점 보존 해두고, 새 좌표로 조사하자
    nx, ny -> x, y
    score > 0
    while T:
        # 출발 할 방향 k
        nx + k, ny + k
        
        '''5. 정리한 조건들 하나씩 나열
            1. 특이한 상황, 조사에 영향을 주는 상황 먼저 가장큰 조건 분기
            2. 특정 블록 만나면?
            3. 웜홀 만나면?
            4. 종료조건
        '''
        if 범위 벗어나는경우?:
            방향 처리, 점수 증가
        if 특정 블록 만나는 경우?:
            방향 처리, 점수 증가
        if 웜홀 만나면?:
            내가 이동해야할 웜홀 찾기
        if 종료조건:
            점수 반환

'''0. 규칙 정리
    핀볼이 아무 위치에서나 아무 방향으로 출발 할 수 있어야 한다.
    모든 좌표에서 출발 하도록 할건데...? -> 아무데서나 출발이 아니라
        0인 부분에서만 출발 할 수 있다.
    조건들
        첫번째. 특정한 블록을 만났을때 방향이 바뀌어야 한다.
        두번째. 웜홀을 만나면 같은 번호의 다른 웜홀로 이동한다. (방향은 바뀌지 않는다.)
        세번째. 벽 (범위를 벗어나면) 방향이 바뀌어야 한다.
        네번째. 방향이 바뀌면 점수가 1점 올라야 한다.
        다섯번째, 시작 지점이나 블랙홀로 도달하면 게임이 종료된다. (점수 갱신)
'''
'''1. 블록 만나는 경우 정리
    블록의 구성은? 이 문제에서만 주어지는 규칙이다. 그럼... 뭐 일단 다 써보자.
    복잡하게 생각할 필요 없이, 상하좌우 이동에 대해서 어디로 이동해야하는지만 적어보자
    항상 반복문을 쓸것이란걸 생각해서, 모두가 동일한 순서대로 정리해보자.
        예를들어, 나는 delta 탐색이 항상 상하좌우가 익숙 했으니 그대로 써보자
    상하좌우 -> 델타탐색 K 방향
                block 자료구조의 n번 위치를 만날때 k 방향 중이면 어디로 갈지를 반응하는 형식
'''
block =
    1번 블록 -> 상: 하
                하: 우
                좌: 상
                우: 좌
    2번 블록 -> 상: 우
                하: 상
                좌: 하
                우: 좌
    3번 블록 -> 상:
                하:
                좌:
                우:
    4번...
    5번...
T
for tc > 1, T
    N
    data = [[]] < -1 <= K <= 10
    '''2. 웜홀에 대한 대응 방식 생각
        N*N 배열안에 6번 7번 8... 10번까지 웜홀이 있을수도 없을수도 있음.
        있는지 없는지 모름?
        그리고, 6번 웜홀이 어디에 있는지 찾아야 할 듯?
            그래야, 나중에 탐색하면서 이동하던 도중에 내가 가야할 웜홀 찾을게 아니라
            미리 찾아놓은 동일번호 다른 좌표 웜홀로 이동하고 싶음.
        웜홀은? 6~10번?    
    '''
    wormhole = 6: [], 7: [], 8: []. ...
    # N*N 전부 순회하면서 6이상인 값 찾아서 웜홀에 삽입
    for x > N:
        for y > N:
            6 <= data x, y:
                wormhole++
    '''3. 게임 규칙 다시 정리
        게임은 핀볼이 원래 위치로 돌아오거나, 블랙홀을 만나면 종료
            함수 return? 조건으로 하면 될 듯.
        문제는 시작지점 내가 찾아야함
            0인 부분에서만 조사 가능
            좌표x, y 4방향에 대해서 다 시도해 봐야 할듯?
    '''
    for x > N:
        for y > N:
            for k > 4
            data x, y == 0:
            for k > 4
                r 최솟값 비교 f(x, y, k) < 이번 x,y에서 k로갔을때 얻은 점수
    out result












